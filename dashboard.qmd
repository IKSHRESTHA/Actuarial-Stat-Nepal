---
title: "Actuarial Stat Nepal"
format: 
  dashboard:
    logo: "images/logoasn.png" 
fig-width: 10
fig-asp: 0.3
theme: [sandstone, custom.scss]
---

```{r,loadpackages}
#| echo: false
#| include: false
#| message: false
library(tidyverse)
# Load necessary library
library(tidyverse)
library(scales)
library(DT)
library(gt)
library(plotly)
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))




```

```{r}


#| label: prep-data
#| echo: false
#| include: false
#| message: false



# Define the possible values for each attribute
ages <- c("<25","25-35","35+")
genders <- c('male', 'female', 'other')
districts <- c('Kathmandu', 'Bhaktapur', 'Lalitpur')
professional_associations <- c('SOA', 'IFOA', 'CAS', 'IAI', 'Other')
types_of_membership <- c('student', 'working', 'honorary', 'associate', 'fellow')
employment_statuses <- c('working', 'still unemployed', 'student')

# Generate 51 random samples
set.seed(123) # for reproducibility
df <- tibble(
  age = sample(ages, 51, replace = TRUE),
  gender = sample(genders, 51, replace = TRUE),
  district = sample(districts, 51, replace = TRUE),
  professional_association = sample(professional_associations, 51, replace = TRUE),
  type_of_membership = sample(types_of_membership, 51, replace = TRUE),
  employment_status = sample(employment_statuses, 51, replace = TRUE)
)
current_date = Sys.Date()





```

#  {.sidebar}

This dashboard displays statistics for: 

|                      |                            |
|----------------------|----------------------------|
| **Actuarial Society** | Actuarial Society of Nepal |
| **Country**          | Nepal                      |
| **Year-Month**       | `{r} current_date`           |

------------------------------------------------------------------------


In `{r} current_date` the members breakdown in terms of membership type was as follows:

|                          |     |
|--------------------------|-----|
| **Fellow** |  13 |
| **associate**            |  21 |
| **student**               |  16 |

------------------------------------------------------------------------
::: {.callout-note collapse="true"}
## Disclaimer

The data presented in this dashboard does not represent the exact number of the actuarial community in Nepal. Instead, it reflects the members of the Actuarial Society of Nepal. The information is based on the membership records of the Actuarial Society of Nepal and may not include all actuaries residing or working in Nepal.
:::





# Member Stats



```{r}
#| label: all-values
#| results: hide

total_members <-nrow(df)

male <- df %>%
  count(gender) %>%
mutate(p = n / sum(n)) |>
filter(gender =="male") %>%
pull(p)

female <- df %>%
  count(gender) %>%
mutate(p = n / sum(n)) |>
filter(gender =="female") %>%
pull(p)


```

## Row {height="30%"}

```{r}
#| content: valuebox
#| title: "Total Member"

list(
icon="",
color="primary",
value= total_members
)


```

```{r}
#| content: valuebox
#| title: "male %"

list(
icon="male",
colour="red",
value=label_percent(accuracy = 0.1)(male)
)

```

```{r}
#| content: valuebox
#| title: "female %"

list(
icon="female",
colour="red",
value=label_percent(accuracy = 0.1)(female)
)

```



## Row {height="70%"}

### Column {width="60%"}



```{r}
#| title: Professional Association

df |>
  count(professional_association) |>
  mutate(p = n / sum(n)) |>
  gt() |>
  fmt_percent(
    columns = p,
    decimals = 1
  ) |>
  tab_style(
    style = cell_text(color = "#ae8b2d", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = professional_association == "SOA"
    )
  ) |>
  tab_style(
    style = cell_text(color = "#0e2635", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = professional_association == "IFOA"
    )
  ) |>
  tab_style(
    style = cell_text(color = "#0e3635", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = professional_association == "CAS"
    )
  ) |>
  tab_style(
    style = cell_text(color = "#0e2685", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = professional_association == "Other"
    )
  ) |>
  cols_label(
    professional_association = "",
    n = "Number of<br>Member",
    p = "Proportion of<br>ASN Member",
    .fn = md
  )
```

### Column {width="40%"}

```{r}
#| title: District 


district_plot <- ggplot(df, aes(x = district, fill = district)) +
  geom_bar() +
  labs(title = "Distribution by District", x = "District", y = "Count") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), legend.position = "none") +
  scale_fill_manual(values = c("Kathmandu" = "#17BECF", "Bhaktapur" = "#BCBD22", "Lalitpur" = "#7F7F7F"))

ggplotly(district_plot)
```

